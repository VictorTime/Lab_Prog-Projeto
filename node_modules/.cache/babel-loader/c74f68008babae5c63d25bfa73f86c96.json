{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Labcom\\\\Documents\\\\Spring Projects\\\\Lab_Prog-Projeto\\\\src\\\\App.js\";\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      num1: null,\n      num2: null,\n      soma: null\n    };\n\n    this.somar = () => {\n      const resultado = parseInt(this.state.num1) + parseInt(this.state.num2);\n      this.setState({\n        soma: resultado\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Nome:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.num1,\n        onChange: e => this.setState({\n          num1: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.num2,\n        onChange: e => this.setState({\n          num2: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), this.state.num1, \" + \", this.state.num2, \" = \", this.state.soma, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.somar,\n        children: \"Somar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Labcom/Documents/Spring Projects/Lab_Prog-Projeto/src/App.js"],"names":["React","App","Component","state","num1","num2","soma","somar","resultado","parseInt","setState","render","e","target","value"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,IAAI,EAAG,IADD;AAENC,MAAAA,IAAI,EAAG,IAFD;AAGNC,MAAAA,IAAI,EAAG;AAHD,KADwB;;AAAA,SAOlCC,KAPkC,GAO1B,MAAM;AACV,YAAMC,SAAS,GAAGC,QAAQ,CAAC,KAAKN,KAAL,CAAWC,IAAZ,CAAR,GACEK,QAAQ,CAAC,KAAKN,KAAL,CAAWE,IAAZ,CAD5B;AAEA,WAAKK,QAAL,CAAc;AAACJ,QAAAA,IAAI,EAAGE;AAAR,OAAd;AACH,KAXiC;AAAA;;AAahCG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,IAArC;AACE,QAAA,QAAQ,EAAGQ,CAAD,IAAO,KAAKF,QAAL,CAAc;AAACN,UAAAA,IAAI,EAAGQ,CAAC,CAACC,MAAF,CAASC;AAAjB,SAAd;AADnB;AAAA;AAAA;AAAA;AAAA,cAHF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF,eAMG;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWE,IAArC;AACC,QAAA,QAAQ,EAAGO,CAAD,IAAO,KAAKF,QAAL,CAAc;AAACL,UAAAA,IAAI,EAAGO,CAAC,CAACC,MAAF,CAASC;AAAjB,SAAd;AADlB;AAAA;AAAA;AAAA;AAAA,cANH,eAQE;AAAA;AAAA;AAAA;AAAA,cARF,EASG,KAAKX,KAAL,CAAWC,IATd,SASuB,KAAKD,KAAL,CAAWE,IATlC,SAS2C,KAAKF,KAAL,CAAWG,IATtD,eAUE;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAQ,QAAA,OAAO,EAAE,KAAKC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeC;;AA7B6B;;AAiClC,eAAeN,GAAf","sourcesContent":["\nimport React from 'react';\n\n\nclass App extends React.Component {\n  state = {\n    num1 : null,\n    num2 : null,\n    soma : null\n  }\n\nsomar = () => {\n    const resultado = parseInt(this.state.num1) \n                      + parseInt(this.state.num2)\n    this.setState({soma : resultado}) \n}\n\n  render() {\n    return(\n      <div>\n       <label> Nome:</label>\n        <br />\n        <input type=\"text\" value={this.state.num1} \n          onChange={(e) => this.setState({num1 : e.target.value})}/>        \n        <br />\n         <input type=\"text\" value={this.state.num2} \n          onChange={(e) => this.setState({num2 : e.target.value})}/>        \n        <br />          \n        {this.state.num1} + {this.state.num2} = {this.state.soma}\n        <br />\n        <button onClick={this.somar}>Somar</button>         \n      </div>\n        )\n    }\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}